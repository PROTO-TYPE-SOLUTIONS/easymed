name: Build, Test, and Push to Registry

on:
  push:
    branches: [ dev-moses ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt

      - name: Run tests
        env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
            EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
            EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
            EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
            EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
            EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
            DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
            DEBUG: ${{ secrets.DEBUG }}
            CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
            CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
            DB_ENGINE: ${{ secrets.DB_ENGINE }}
            DJANGO_DB: ${{ secrets.DJANGO_DB }}
            POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
            DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
        run: |
          echo "POSTGRES_DB=${POSTGRES_DB}"
          cd ${GITHUB_WORKSPACE}/backend
          pwd
          pytest .

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Print Docker Username
        run: |
          echo "Username: ${{ secrets.DOCKER_USERNAME }}"

      - name: Build and push backend image
        run: |
          cd ./backend
          docker build . -t mosesmbadi/easymedbackend:latest
          docker push mosesmbadi/easymedbackend:latest

      - name: Build and push frontend image
        run: |
          cd ./front-end
          docker build . -t mosesmbadi/easymedfrontend:latest
          docker push mosesmbadi/easymedfrontend:latest

# ==================== Deployment ============================
  terraform-ansible:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./deployment


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform changes
        run: terraform apply -auto-approve -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Generate Ansible Inventory
        run: |
          mkdir -p ./deployment
          echo "[app_server]" > ./deployment/inventory.ini
          echo "${{ env.SERVER_IP }}" >> ./deployment/inventory.ini
          echo "ansible_user=ubuntu" >> ./deployment/inventory.ini
          echo "ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ./deployment/inventory.ini

      - name: Save Terraform output
        id: get_ip
        run: echo "SERVER_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV


      - name: Check Inventory
        run: cat ./deployment/inventory.ini

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ./deployment/inventory.ini ansible-playbook.yml
        working-directory: ./deployment  

        


  # ansible:
  #   runs-on: ubuntu-latest
  #   needs: terraform

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install Ansible
  #       run: sudo apt update && sudo apt install -y ansible

  #     - name: Configure SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
          
  #     - name: Run Ansible Playbook
  #       run: |
  #         ansible-playbook -i ./deployment/inventory.ini ansible-playbook.yml
  #       working-directory: ./deployment